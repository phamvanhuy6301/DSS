import streamlit as st 
import numpy as np 
import ThongKe
import TimKiem
import DanhSach
import pandas as pd
import seaborn as sns


st.title("H·ªá h·ªó tr·ª£ quy·∫øt ƒë·ªãnh nh·∫≠p s√°ch")
sidebar_radiio = st.sidebar.radio(
    'Ch·ª©c NƒÉng', 
    ("Th·ªëng K√™", "T√¨m Ki·∫øm", 'Danh S√°ch')
)

if sidebar_radiio == "Th·ªëng K√™": 
    tabSach, tabTacGia, tabTheLoai = st.tabs(["Theo S√°ch", "Theo T√°c Gi·∫£", "Theo Th·ªÉ Lo·∫°i"])
    with tabSach: 
        add_selectbox = st.selectbox(
        "Th·ªëng k√™ theo s√°ch",
        ("Top cu·ªën s√°ch theo doanh s·ªë", "Top cu·ªën s√°ch theo l∆∞·ª£ng review", "Top cu·ªën s√°ch theo rating", "Top cu·ªën s√°ch theo gi·∫£m gi√°"))
        Plot = ThongKe.Plot()
        k = st.number_input(label = 'Nh·∫≠p k (ch·∫≥ng h·∫°n 10 th√¨ s·∫Ω hi·ªÉn th·ªã top 10)', min_value = 0, max_value = 100, value = 5)

        if add_selectbox == "Top cu·ªën s√°ch theo doanh s·ªë": 
            fig = Plot.Topbook(k, 'quantity')
            st.pyplot(fig)
        elif add_selectbox == "Top cu·ªën s√°ch theo l∆∞·ª£ng review": 
            fig = Plot.Topbook(k, 'n_review')
            st.pyplot(fig)
        elif add_selectbox == "Top cu·ªën s√°ch theo rating": 
            fig = Plot.Topbook(k, 'avg_rating')
            st.pyplot(fig)
        else: 
            fig = Plot.Topbook(k, 'discount')
            st.pyplot(fig)    
        st.subheader('So s√°nh gi·ªØa Top {} v·ªõi to√†n b·ªô cu·ªën s√°ch trong t·∫≠p d·ªØ li·ªáu '.format(k))
        meanall, meantop = Plot.meanbook(k)
        col1, col2, col5 = st.columns(3)
        col3, col4 = st.columns(2)
        
        with col1: 
            st.metric(label="S·ªë trang ", value= np.round((meantop.pages), 0), delta=np.round(meantop.pages - meanall.pages, 0), delta_color="normal")
        with col2:
            st.metric(label="rating", value= np.round(meantop.avg_rating, 2), delta=np.round(meantop.avg_rating - meanall.avg_rating, 2), delta_color="normal")
        with col3: 
            st.metric(label="Gi√° ban ƒë·∫ßu", value= np.round(meantop.original_price, 0), delta=np.round(meantop.original_price - meanall.original_price, 0), delta_color="normal")
        with col4: 
            st.metric(label="Gi√° hi·ªán t·∫°i", value= np.round(meantop.current_price, 0), delta=np.round(meantop.current_price - meanall.current_price, 0), delta_color="normal")
        with col5:
            st.metric(label="T·ª∑ l·ªá gi·∫£m gi√°", value= np.round(meantop.discount, 1), delta=np.round(meantop.discount - meanall.discount, 1), delta_color="normal")
        
        st.subheader("M·∫≠t ƒë·ªô gi√° hi·ªán t·∫°i so v·ªõi gi√° ban ƒë·∫ßu")
        fig = Plot.price()
        st.pyplot(fig)
        st.subheader("M·∫≠t ƒë·ªô s·ªë trang")
        fig = Plot.pages()
        st.pyplot(fig)
    with tabTacGia: 
        j = st.number_input(label = 'Nh·∫≠p k (ch·∫≥ng h·∫°n 10 th√¨ s·∫Ω hi·ªÉn th·ªã top 10)', min_value = 0, max_value = 100, value = 5, key='input4')
        st.subheader(' Top {} t√°c gi·∫£ c√≥ nhi·ªÅu s√°ch nh·∫•t '.format(j))
        topTacGiaNhieuSach = Plot.topTacGiaNhieuSach(j)
        st.dataframe(topTacGiaNhieuSach)
        add_selectbox2 = st.selectbox(
        "Th·ªëng k√™ theo t√°c gi·∫£",
        ("Top t√°c gi·∫£ theo doanh s·ªë", "Top t√°c gi·∫£ theo l∆∞·ª£ng review", "Top t√°c gi·∫£ theo rating", "Top t√°c gi·∫£ theo gi·∫£m gi√°"))
        Plot = ThongKe.Plot()
        k = st.number_input(label = 'Nh·∫≠p k (ch·∫≥ng h·∫°n 10 th√¨ s·∫Ω hi·ªÉn th·ªã top 10)', min_value = 0, max_value = 100, value = 5, key='input2')
        if add_selectbox2 == "Top t√°c gi·∫£ theo doanh s·ªë": 
            fig = Plot.Topauthors(k, 'quantity')
            st.pyplot(fig)
        elif add_selectbox2== "Top t√°c gi·∫£ theo l∆∞·ª£ng review": 
            fig = Plot.Topauthors(k, 'n_review')
            st.pyplot(fig)
        elif add_selectbox2 == "Top t√°c gi·∫£ theo rating": 
            fig = Plot.Topauthors(k, 'avg_rating')
            st.pyplot(fig)
        else: 
            fig = Plot.Topauthors(k, 'discount')
            st.pyplot(fig)
        st.subheader('So s√°nh gi·ªØa Top {} v·ªõi to√†n b·ªô cu·ªën s√°ch trong t·∫≠p d·ªØ li·ªáu '.format(k))
        meanall, meantop = Plot.meanauthor(k)
        col1, col2, col5 = st.columns(3)
        col3, col4 = st.columns(2)
        
        with col1: 
            st.metric(label="S·ªë trang ", value= np.round((meantop.pages), 0), delta=np.round(meantop.pages - meanall.pages, 0), delta_color="normal")
        with col2:
            st.metric(label="rating", value= np.round(meantop.avg_rating, 2), delta=np.round(meantop.avg_rating - meanall.avg_rating, 2), delta_color="normal")
        with col3: 
            st.metric(label="Gi√° ban ƒë·∫ßu", value= np.round(meantop.original_price, 0), delta=np.round(meantop.original_price - meanall.original_price, 0), delta_color="normal")
        with col4: 
            st.metric(label="Gi√° hi·ªán t·∫°i", value= np.round(meantop.current_price, 0), delta=np.round(meantop.current_price - meanall.current_price, 0), delta_color="normal")
        with col5:
            st.metric(label="T·ª∑ l·ªá gi·∫£m gi√°", value= np.round(meantop.discount, 1), delta=np.round(meantop.discount - meanall.discount, 1), delta_color="normal")
        


    with tabTheLoai: 
        m = st.number_input(label = 'Nh·∫≠p k (ch·∫≥ng h·∫°n 10 th√¨ s·∫Ω hi·ªÉn th·ªã top 10)', min_value = 0, max_value = 100, value = 5, key='inputm')
        st.subheader('{} th·ªÉ lo·∫°i c√≥ s·ªë l∆∞·ª£ng s√°ch b√°n ƒë∆∞·ª£c nhi·ªÅu nh·∫•t '.format(m))
        Topcategory = Plot.categoryInTop(m)
        st.dataframe(Topcategory)
        add_selectbox2 = st.selectbox(
        "Th·ªëng k√™ theo th·ªÉ lo·∫°i",
        ("Top th·ªÉ lo·∫°i theo doanh s·ªë", "Top th·ªÉ lo·∫°i theo l∆∞·ª£ng review", "Top th·ªÉ lo·∫°i theo rating", "Top th·ªÉ lo·∫°i theo gi·∫£m gi√°"))
        Plot = ThongKe.Plot()
        k = st.number_input(label = 'Nh·∫≠p k (ch·∫≥ng h·∫°n 10 th√¨ s·∫Ω hi·ªÉn th·ªã top 10)', min_value = 0, max_value = 100, value = 5, key='input3')
        if add_selectbox2 == "Top th·ªÉ lo·∫°i theo doanh s·ªë": 
            fig = Plot.Topcategory(k, 'quantity')
            st.pyplot(fig)
        elif add_selectbox2== "Top th·ªÉ lo·∫°i theo l∆∞·ª£ng review": 
            fig = Plot.Topcategory(k, 'n_review')
            st.pyplot(fig)
        elif add_selectbox2 == "Top th·ªÉ lo·∫°i theo rating": 
            fig = Plot.Topcategory(k, 'avg_rating')
            st.pyplot(fig)
        else: 
            fig = Plot.Topcategory(k, 'discount')
            st.pyplot(fig)
        st.subheader('So s√°nh gi·ªØa Top {} v·ªõi to√†n b·ªô cu·ªën s√°ch trong t·∫≠p d·ªØ li·ªáu '.format(k))
        meanall, meantop = Plot.meancategory(k)
        col1, col2, col5 = st.columns(3)
        col3, col4 = st.columns(2)
        
        with col1: 
            st.metric(label="S·ªë trang ", value= np.round((meantop.pages), 0), delta=np.round(meantop.pages - meanall.pages, 0), delta_color="normal")
        with col2:
            st.metric(label="rating", value= np.round(meantop.avg_rating, 2), delta=np.round(meantop.avg_rating - meanall.avg_rating, 2), delta_color="normal")
        with col3: 
            st.metric(label="Gi√° ban ƒë·∫ßu", value= np.round(meantop.original_price, 0), delta=np.round(meantop.original_price - meanall.original_price, 0), delta_color="normal")
        with col4: 
            st.metric(label="Gi√° hi·ªán t·∫°i", value= np.round(meantop.current_price, 0), delta=np.round(meantop.current_price - meanall.current_price, 0), delta_color="normal")
        with col5:
            st.metric(label="T·ª∑ l·ªá gi·∫£m gi√°", value= np.round(meantop.discount, 1), delta=np.round(meantop.discount - meanall.discount, 1), delta_color="normal")
elif sidebar_radiio == "T√¨m Ki·∫øm": 
    col1, col2 = st.columns(2)

    with col1:
        radio_search = st.radio(
            "T√¨m ki·∫øm theo üëá",
            ("T√™n S√°ch", "T√°c Gi·∫£"), 
            key= 'TimKiem'
        )

    with col2:
        text_input = st.text_input(
            "Enter some text üëá",
        )
    Tim = TimKiem.Tim()
    if radio_search == "T√™n S√°ch": 
        result = Tim.TimTheoTen(text_input)
        result = result.reset_index(drop=True)
        st.dataframe(result)
    else: 
        result = Tim.TimTheoTacGia(text_input)
        result = result.reset_index(drop=True)
        st.dataframe(result)
        #st.pyplot(fig)
    selected_indices = st.multiselect('Ch·ªçn h√†ng:', result.index)
    selected_rows = result.loc[selected_indices]
    selected_rows_id = result.loc[selected_indices]['product_id']
    st.write('### S√°ch ƒë√£ ch·ªçn', selected_rows)  
    Ds = DanhSach.DanhSach()
    DsThuVien = Ds.showDSThuVien()
    selectbox = st.selectbox('Ch·ªçn danh s√°ch', DsThuVien.Name)
    if st.button('Th√™m v√†o danh s√°ch'): 
        for id in selected_rows_id: 
            Ds.addnewbook(id, selectbox)
        st.success('ƒê√£ l∆∞u')
else: 
    st.button("Re-run")
    st.subheader("C√°c danh s√°ch")
    Ds = DanhSach.DanhSach()
    DsThuVien = Ds.showDSThuVien()
    st.dataframe(DsThuVien)
    col1Ds, col2Ds = st.columns(2)
    with col1Ds: 
        textboxList = st.text_input('T√™n Danh S√°ch m·ªõi')
    with col2Ds: 
        btcreateList = st.button('Th√™m', type= 'primary')
    if btcreateList: 
        Ds.createListbook(textboxList)
        st.success("ƒê√£ t·∫°o danh s√°ch")
    st.subheader("Chi ti·∫øt danh s√°ch ")
    selectList = st.selectbox('Ch·ªçn danh s√°ch', DsThuVien.Name)
    st.write('{}'.format(selectList))
    Listbook = Ds.showThuVien(selectList)
    st.dataframe(Listbook)
    
    
    
        
    







    







